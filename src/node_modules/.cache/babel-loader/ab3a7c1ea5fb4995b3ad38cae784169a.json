{"ast":null,"code":"var _jsxFileName = \"/Users/benajasandrain/codeLabs/meetingground/mgcode/src/pages/signup.jsx\";\n\n/*SignUpPage.jsx*/\nimport React, { Component } from \"react\"; //You have to use the link component to link between you pages\n//import gql from \"graphql-tag\";\n\nimport { Query, graphql } from \"react-apollo\";\nimport ApolloClient from \"apollo-boost\";\nimport { ApolloProvider } from \"react-apollo\"; //npm install apollo-boost react-apollo graphql --save\n\nimport { Link } from \"react-router-dom\"; // yarn add apollo-client\n\nimport HostList from \"./graphql/server\"; // apollo client setup\n\nconst client = new ApolloClient({\n  uri: \"http://localhost:4000/graphql\"\n});\n\nclass SignUpPage extends Component {\n  render() {\n    const id = this.props.match.params.id;\n    return /*#__PURE__*/React.createElement(ApolloProvider, {\n      client: client,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }\n    }, \"Host List\"), /*#__PURE__*/React.createElement(HostList, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }\n    }))) //   <Query query={query} variables={{ id }}>\n    //     {({ loading, err, data }) => {\n    //       if (loading) return <div>loading</div>;\n    //       return <div>{data.links.email}</div>;\n    //     }}\n    //   </Query>\n    ;\n  }\n\n} // const query = gql`\n//   query LinkInfo($id: string) {\n//     links(link: $id) {\n//       email\n//     }\n//   }\n// `;\n//   return (\n//     <div>\n//       <h3> Sign up page!</h3>\n//       {/* <Link to=\"/\">Main Page</Link> */}\n//     </div>\n//   );\n// };\n\n\nexport default SignUpPage;","map":{"version":3,"sources":["/Users/benajasandrain/codeLabs/meetingground/mgcode/src/pages/signup.jsx"],"names":["React","Component","Query","graphql","ApolloClient","ApolloProvider","Link","HostList","client","uri","SignUpPage","render","id","props","match","params"],"mappings":";;AAAA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CACA;AACA;;AACA,SAASC,KAAT,EAAgBC,OAAhB,QAA+B,cAA/B;AACA,OAAOC,YAAP,MAAyB,cAAzB;AACA,SAASC,cAAT,QAA+B,cAA/B,C,CAEA;;AACA,SAASC,IAAT,QAAqB,kBAArB,C,CACA;;AAEA,OAAOC,QAAP,MAAqB,kBAArB,C,CAEA;;AACA,MAAMC,MAAM,GAAG,IAAIJ,YAAJ,CAAiB;AAC9BK,EAAAA,GAAG,EAAE;AADyB,CAAjB,CAAf;;AAIA,MAAMC,UAAN,SAAyBT,SAAzB,CAAmC;AACjCU,EAAAA,MAAM,GAAG;AACP,UAAMC,EAAE,GAAG,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBH,EAAnC;AACA,wBACE,oBAAC,cAAD;AAAgB,MAAA,MAAM,EAAEJ,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,eAEE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF,CADF,CAOE;AACA;AACA;AACA;AACA;AACA;AAZF;AAcD;;AAjBgC,C,CAoBnC;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;;;AACA,eAAeE,UAAf","sourcesContent":["/*SignUpPage.jsx*/\nimport React, { Component } from \"react\";\n//You have to use the link component to link between you pages\n//import gql from \"graphql-tag\";\nimport { Query, graphql } from \"react-apollo\";\nimport ApolloClient from \"apollo-boost\";\nimport { ApolloProvider } from \"react-apollo\";\n\n//npm install apollo-boost react-apollo graphql --save\nimport { Link } from \"react-router-dom\";\n// yarn add apollo-client\n\nimport HostList from \"./graphql/server\";\n\n// apollo client setup\nconst client = new ApolloClient({\n  uri: \"http://localhost:4000/graphql\",\n});\n\nclass SignUpPage extends Component {\n  render() {\n    const id = this.props.match.params.id;\n    return (\n      <ApolloProvider client={client}>\n        <div>\n          <h1>Host List</h1>\n          <HostList />\n        </div>\n      </ApolloProvider>\n      //   <Query query={query} variables={{ id }}>\n      //     {({ loading, err, data }) => {\n      //       if (loading) return <div>loading</div>;\n      //       return <div>{data.links.email}</div>;\n      //     }}\n      //   </Query>\n    );\n  }\n}\n\n// const query = gql`\n//   query LinkInfo($id: string) {\n//     links(link: $id) {\n//       email\n//     }\n//   }\n// `;\n\n//   return (\n//     <div>\n//       <h3> Sign up page!</h3>\n//       {/* <Link to=\"/\">Main Page</Link> */}\n\n//     </div>\n//   );\n// };\nexport default SignUpPage;\n"]},"metadata":{},"sourceType":"module"}