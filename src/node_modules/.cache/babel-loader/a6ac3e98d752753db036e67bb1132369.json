{"ast":null,"code":"var _jsxFileName = \"/Users/benajasandrain/codeLabs/meetingground/mgcode/src/pages/login.jsx\";\n\n/*login.jsx*/\nimport React from \"react\";\nimport GoogleLogin from \"react-google-login\"; // npm install react-google-login\n//You have to use the link component to link between you pages\n\nimport { Link } from \"react-router-dom\";\nimport { Button } from \"react-bootstrap\"; //$ npm install --save react react-dom\n//$ npm install --save react-bootstrap\n\nconst responseGoogleSuccess = response => {\n  console.log(response);\n  console.log(response.profileObj);\n};\n\nconst responseGoogleFailure = response => {\n  console.log(response);\n  console.log(response.profileObj);\n  document.write(\"Not able to join to Meeting Ground\\nLogin failed\");\n}; //Functional Component\n\n\nconst LoginPage = () => {\n  function responseGoogle(response) {\n    console.log(response);\n    var profile = response.getBasicProfile();\n    console.log(\"ID: \" + profile.getId()); // Do not send to your backend! Use an ID token instead.\n\n    console.log(\"Name: \" + profile.getName());\n    console.log(\"Image URL: \" + profile.getImageUrl());\n    console.log(\"Email: \" + profile.getEmail()); // This is null if the 'email' scope is not present.\n\n    /*#__PURE__*/\n    React.createElement(Link, {\n      to: \"/home\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      renderAs: \"button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }\n    }, \"Login\")));\n  }\n\n  var next = \"/home\";\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    id: \"logo\",\n    src: \"./img/meetingGroundLogo.png\",\n    alt: \"Meeting Ground Logo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, \"Welcome to the React Router Tutorial\"), /*#__PURE__*/React.createElement(\"small\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, \"Main Page\"), /*#__PURE__*/React.createElement(GoogleLogin, {\n    clientId: \"272589905349-scqfilok0ucok40j6h6eo9pcsp7bhadd.apps.googleusercontent.com\",\n    buttonText: \"Login\",\n    onFailure: responseGoogle,\n    onSuccess: responseGoogle,\n    cookiePolicy: \"single_host_origin\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default LoginPage;","map":{"version":3,"sources":["/Users/benajasandrain/codeLabs/meetingground/mgcode/src/pages/login.jsx"],"names":["React","GoogleLogin","Link","Button","responseGoogleSuccess","response","console","log","profileObj","responseGoogleFailure","document","write","LoginPage","responseGoogle","profile","getBasicProfile","getId","getName","getImageUrl","getEmail","next"],"mappings":";;AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,oBAAxB,C,CACA;AAEA;;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,MAAT,QAAuB,iBAAvB,C,CACA;AACA;;AAEA,MAAMC,qBAAqB,GAAIC,QAAD,IAAc;AAC1CC,EAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,UAArB;AACD,CAHD;;AAIA,MAAMC,qBAAqB,GAAIJ,QAAD,IAAc;AAC1CC,EAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,UAArB;AACAE,EAAAA,QAAQ,CAACC,KAAT,CAAe,kDAAf;AACD,CAJD,C,CAMA;;;AACA,MAAMC,SAAS,GAAG,MAAM;AACtB,WAASC,cAAT,CAAwBR,QAAxB,EAAkC;AAChCC,IAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACA,QAAIS,OAAO,GAAGT,QAAQ,CAACU,eAAT,EAAd;AACAT,IAAAA,OAAO,CAACC,GAAR,CAAY,SAASO,OAAO,CAACE,KAAR,EAArB,EAHgC,CAGO;;AACvCV,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAWO,OAAO,CAACG,OAAR,EAAvB;AACAX,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAgBO,OAAO,CAACI,WAAR,EAA5B;AACAZ,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAYO,OAAO,CAACK,QAAR,EAAxB,EANgC,CAMa;;AAC7C;AAAA,wBAAC,IAAD;AAAM,MAAA,EAAE,EAAC,OAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,MAAD;AAAQ,MAAA,QAAQ,EAAC,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,CADF;AAKD;;AAED,MAAIC,IAAI,GAAG,OAAX;AACA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,EAAE,EAAC,MADL;AAEE,IAAA,GAAG,EAAC,6BAFN;AAGE,IAAA,GAAG,EAAC,qBAHN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4CANF,eAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAPF,eAQE,oBAAC,WAAD;AACE,IAAA,QAAQ,EAAC,0EADX;AAEE,IAAA,UAAU,EAAC,OAFb;AAGE,IAAA,SAAS,EAAEP,cAHb;AAIE,IAAA,SAAS,EAAEA,cAJb;AAKE,IAAA,YAAY,EAAE,oBALhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,CADF;AAkBD,CAlCD;;AAoCA,eAAeD,SAAf","sourcesContent":["/*login.jsx*/\nimport React from \"react\";\nimport GoogleLogin from \"react-google-login\";\n// npm install react-google-login\n\n//You have to use the link component to link between you pages\nimport { Link } from \"react-router-dom\";\nimport { Button } from \"react-bootstrap\";\n//$ npm install --save react react-dom\n//$ npm install --save react-bootstrap\n\nconst responseGoogleSuccess = (response) => {\n  console.log(response);\n  console.log(response.profileObj);\n};\nconst responseGoogleFailure = (response) => {\n  console.log(response);\n  console.log(response.profileObj);\n  document.write(\"Not able to join to Meeting Ground\\nLogin failed\");\n};\n\n//Functional Component\nconst LoginPage = () => {\n  function responseGoogle(response) {\n    console.log(response);\n    var profile = response.getBasicProfile();\n    console.log(\"ID: \" + profile.getId()); // Do not send to your backend! Use an ID token instead.\n    console.log(\"Name: \" + profile.getName());\n    console.log(\"Image URL: \" + profile.getImageUrl());\n    console.log(\"Email: \" + profile.getEmail()); // This is null if the 'email' scope is not present.\n    <Link to=\"/home\">\n      <Button renderAs=\"button\">\n        <span>Login</span>\n      </Button>\n    </Link>;\n  }\n\n  var next = \"/home\";\n  return (\n    <div>\n      <img\n        id=\"logo\"\n        src=\"./img/meetingGroundLogo.png\"\n        alt=\"Meeting Ground Logo\"\n      />\n      <h3>Welcome to the React Router Tutorial</h3>\n      <small>Main Page</small>\n      <GoogleLogin\n        clientId=\"272589905349-scqfilok0ucok40j6h6eo9pcsp7bhadd.apps.googleusercontent.com\"\n        buttonText=\"Login\"\n        onFailure={responseGoogle}\n        onSuccess={responseGoogle}\n        cookiePolicy={\"single_host_origin\"}\n      />\n    </div>\n  );\n};\n\nexport default LoginPage;\n"]},"metadata":{},"sourceType":"module"}